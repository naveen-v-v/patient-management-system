# Used to run with Docker CLI, run command: docker-compose up --build OR can just use the local docker containers
# Docker Compose configuration for Patient Service and PostgreSQL database

services:
  kafka:
    image: confluentinc/cp-kafka:7.9.4
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
    environment:
        # KRaft mode configuration
      CLUSTER_ID: "kafka-cluster-1"
      KAFKA_NODE_ID: "0"

      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      # Set process roles and controller quorum voters for KRaft mode
      KAFKA_PROCESS_ROLES: "controller,broker"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"
      # Listeners configuration
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      # Log directory for Kafka
#      KAFKA_LOG_DIRS: "/kafka-logs"
    volumes:
      - kafka-logs:/var/lib/kafka/data
    networks:
      - internal

  billing-service:
    build:
      context: ./billing-service
      dockerfile: Dockerfile
    image: billing-service:latest
    container_name: billing-service
    ports:
      - "4001:4001"
      - "9001:9001"
    networks:
      - internal
    restart: unless-stopped

  patient-service-db:
    image: postgres:latest
    container_name: patient-service-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - patient-service-data:/var/lib/postgresql/data
    ports:
      - "5200:5432"
    networks:
      - internal
    restart: unless-stopped

  patient-service:
    build:
      context: ./patient-service
      dockerfile: Dockerfile
    image: patient-service:latest
    container_name: patient-service
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_SQL_INIT_MODE: ${SPRING_SQL_INIT_MODE}
      # gRPC Billing Service Configuration
      BILLING_SERVICE_GRPC_PORT: 9001
      BILLING_SERVICE_ADDRESS: billing-service
      # Kafka Configuration
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"

    depends_on:
      - patient-service-db
      - billing-service
    ports:
      - "4000:4000"
    networks:
      - internal
    restart: unless-stopped

volumes:
  patient-service-data:
  kafka-logs:

# !!! Make sure the network 'internal' is created before running the services !!!
networks:
  internal:
    external: true
